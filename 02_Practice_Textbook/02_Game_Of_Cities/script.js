// 02_Game_Of_Cities
// Игра в города


// 15 Постановка задачи / Игра в города на JavaScript

// Существует игра в города. Ее правила: в города играют двое и более человек, в которой каждый участник в свою
// очередь называет реально существующий город любой страны, название которого начинается на ту букву,
// которой оканчивается название предыдущего участника.
//
// Давайте реализуем эту игру. Пусть играют два человека за одним компьютером. Ходят по очереди.
// Города вводятся в один инпут и отправляются по нажатию клавиши Enter.
// Браузер должен запоминать города, которые уже были, и не принимать такие города.
//
// Давайте сразу сделаем простую верстку нашего проекта.
// У нас будет инпут для ввода городов и див для вывода сообщений со стороны браузера:
//
// <input id="field">
// <div id="message"></div>
// Можем сразу получить эти элементы в переменные:
//
// let field   = document.querySelector('#field');
// let message = document.querySelector('#message');
// Поговорим теперь об этапах реализации этого проекта. В предыдущих уроках я сам разбивал проект на этапы,
// облегчая вам работу. В данном проекте я бы хотел, чтобы вы для начала сами попробовали сделать это.


// 1 Распишите текстом подзадачи, которые нужно решить для реализации данного проекта.

// 1) Вешаем слушатель события на инпут, собитие keypress или keydown, далее обратотчик события.
// В качестве аргумента объект событие event.
// 2) В обработичике события мы проверяем event через key или code на Enter.
// 3) Если условие не верно можно вывести alert.
// 4) Если условие верно, то создаем пустой массив с городами.
// 5) Далее делаем проверку, как вариант через filter на наличие в массиве введенного города.
// 6) Ок пушим в него введенный город.
// 7) Иначе в message выводим, что город уже есть.
// 8) Очищаем инпут.
// 9) Со 2го введения, возможно тут понадобится флаг. Нужна еще проверка при добавлении города,
// что 0 символ равен последнему символу последнего элемента массива городов.

// Не совсем понятно как сверять введенный город, то что такой город вообще существует.
// Как вариант это массив с существующими городами, но это капец огромный масиив)))


// 16 Реализация задачи / Реализация игры в города на JavaScript

// Давайте обсудим, как мы будем реализовывать наш проект.
//
// Я бы начал с того, что сделал бы массив, в который будут записываться города, которые вводят наши игроки:
//
// let cities = [];
// Пусть у нас начало игры и ходит первый игрок. Он вбивает город и нажимает Enter.
// Очевидно, что этот город мы сразу можем внести в наш массив с городами.
//
// Теперь будет ходить второй игрок. Так как наш массив уже не пуст,
// то этот второй ход будет описываться тем же алгоритмом, что и все последующие ходы.
//
// Что это за алгоритм? Во-первых, нужно проверить то, что первая буква введенного города совпадает с последней буквой
// предыдущего города. Во-вторых, нужно проверить то, что такого города еще не было в этой игре.
//
// Если оба этих условия выполняются, то введенный город записывается в наш массив и ход переходит к следующему игроку.
// Если же какое-то условие не выполняется, то нужно вывести сообщение об этом.


// 1 Реализуйте игру в соответствии с описанным алгоритмом.

let field = document.querySelector('#field');
let message = document.querySelector('#message');

let cities = [];
let notCorrectLetters = ['ь', 'ъ', 'ы', 'ё'];

field.addEventListener('keypress', function (event) {
    if (event.code === 'Enter') {
        if (cities.length) {
            let firstLetter = this.value.slice(0, 1).toLowerCase();
            let lastLetter = cities.slice(-1).join('').slice(-1); // получаю последний элемент из массива, разбиваю элемент на строки, получаю последний символ строки

            let notCorrectLetter = notCorrectLetters.some(el => el === lastLetter);
            notCorrectLetter && (lastLetter = cities.slice(-1).join('').slice(-2, -1)); // если последняя буква не корректна, то присваиваю предпоследнюю

            let res = cities.some(el => el === this.value);
            (firstLetter === lastLetter) && !res ? cities.push(this.value.toLowerCase()) : message.textContent = 'Ошибка';

            this.value = '';
        } else {
            cities.push(this.value.toLowerCase());
            this.value = '';
        }
        console.log(cities);
    }
});

field.addEventListener('input', () => message.textContent = '');
