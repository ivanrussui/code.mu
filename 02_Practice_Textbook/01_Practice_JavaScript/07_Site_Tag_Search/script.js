// 01_Practice_JavaScript
// Практика JavaScript


// 6 Сайт поиск тегов / Поиск тегов на JavaScript

// Сейчас мы сделаем сайт, который будет помогать определить значение HTML тега.
// Пусть в этом скрипте будет инпут, в который пользователь будет вводить имя тега.
// После этого по нажатию на Enter под инпутом пусть выдается описание этого тега.


// 1 Продумайте, как удобнее всего хранить имена тегов и их описания в соответствии с поставленной задачей.
// 2 Реализуйте описанный сайт.

// 1я реализация
// сначала сделал через массив объектов
// let database = [
//     {
//         'p': 'Тег p создает абзац. Абзацы, наряду с заголовками, составляются основную структуру текста в HTML странице.'
//     },
//     {
//         'h1': 'Тег h1 создает заголовок 1-го уровня. Заголовок - это название какого-либо блока, ' +
//             'обычно набранное большим и жирным шрифтом.'
//     },
//     {
//         'h2': 'Тег h2 создает заголовок 2-го уровня. Заголовок - это название какого-либо блока, ' +
//             'обычно набранное большим и жирным шрифтом.'
//     },
//     {
//         'h3': 'Тег h3 создает заголовок 3-го уровня. Заголовок - это название какого-либо блока, ' +
//             'обычно набранное большим и жирным шрифтом.'
//     },
//     {
//         'h4': 'Тег h4 создает заголовок 4-го уровня. Заголовок - это название какого-либо блока, ' +
//             'обычно набранное большим и жирным шрифтом.'
//     },
//     {
//         'h5': 'Тег h5 создает заголовок 5-го уровня. Заголовок - это название какого-либо блока, ' +
//             'обычно набранное большим и жирным шрифтом.'
//     },
//     {
//         'h6': 'Тег h6 создает заголовок 6-го уровня. Заголовок - это название какого-либо блока, ' +
//             'обычно набранное большим и жирным шрифтом.'
//     },
//     {
//         'br': 'Тег br создает разрыв строки (это означает, что текст начнется с новой строки после этого тега). ' +
//             'Не требует закрывающего тега.'
//     },
//     {
//         'a': 'Тег a создает ссылку на другую страницу своего или чужого сайта. Адрес ссылки следует писать в атрибуте href.'
//     },
//     {
//         'ul': 'Тег ul создает так называемый неупорядоченный список с маркерами в виде точек.'
//     },
//     {
//         'ol': 'Тег ol создает так называемый упорядоченный список с маркерами в виде цифр.'
//     },
//     {
//         'li': 'Тег li задает пункт упорядоченного списка ol или неупорядоченного списка ul. Вне списков тег не употребляется.'
//     },
//     {
//         'img': 'Тег img создает картинку. Путь к картинке прописывается в атрибуте src. Не требует закрывающего тега.'
//     },
//     {
//         'div': 'Тег div задает блок, который объединяет в себе другие теги.'
//     },
//     {
//         'span': 'Тег span позволяет выделить кусочек текста.'
//     },
//     {
//         'b': 'Тег b задает жирный текст на HTML.'
//     },
//     {
//         'i': 'Тег i задает курсив с помощью HTML.'
//     },
//     {
//         'strong': 'Тег strong задает важный текст, на котором хочет сделать акцент автор.'
//     },
//     {
//         'em': 'Тег em задает важный текст, на котором хочет сделать акцент автор'
//     },
//     {
//         's': 'Тег s задает перечеркнутый текст на HTML.'
//     },
//     {
//         'hr': 'Тег hr задает разделительную горизонтальную линию. Преимущество тега в том, что для того, ' +
//             'чтобы провести одиночную линию, не требуется создавать лишних блоков. Не требует закрывающего тега.'
//     },
//     {
//         'form': 'Тег form создает форму для отправки данных на сервер, где эти данные будут обработаны с помощью языка' +
//             ' PHP. Также данные формы могут быть обработаны с помощью языка JavaScript.'
//     },
//     {
//         'input': 'Тег input создает различные элементы HTML формы: обычное поле ввода, поле для ввода пароля, ' +
//             'флажок checkbox (чекбокс), радио кнопочки (radio), кнопку. Не требует закрывающего тега.'
//     },
//     {
//         'button': 'Тег button создает кнопку для использования в HTML формах, а также просто как элемент дизайна ' +
//             '(в этом случае ее часто вкладывают в ссылку).'
//     },
//     {
//         'textarea': 'Тег textarea создает многострочное поле ввода для использования в HTML формах.\n' +
//             'В отличие от тега input, в textarea можно вбивать много строк текста, разделяя их клавишей Enter.'
//     },
//     {
//         'select': 'Тег select создает выпадающий список для использования в HTML формах.'
//     },
//     {
//         'option': 'Тег option создает пункт выпадающего списка для тега select в HTML форме.'
//     },
//     {
//         'optgroup': 'Тег optgroup группирует пункты option выпадающего списка select.\n' +
//             'Группировка нужна для того, чтобы дать общий заголовок определенной группе пунктов списка. ' +
//             'Этот заголовок задается в атрибуте label тега optgroup.'
//     },
//     {
//         'label': 'Тег label задает метку для поля ввода типа input, textarea, select и так далее.\n' +
//             'Метка привязывается к определенному полю ввода с помощью атрибута for.' +
//             ' В нем следует указывать значение атрибута id поля ввода, к которому привязана метка.'
//     },
//     {
//         'fieldset': 'Тег fieldset группирует поля HTML формы.\n' +
//             'Результат при этом обводится рамкой, а подпись, которая создается с помощью тега legend,' +
//             ' разрывает эту рамку, создавая неповторимый другими средствами эффект (см. пример).'
//     },
//     {
//         'legend': 'Тег legend задает подпись над группировкой полей HTML формы, сделанной с помощью тега fieldset.'
//     },
//     {
//         'datalist': 'Тег datalist создает автозаполнение для полей ввода input в HTML форме.\n' +
//             'Суть автозаполнения: когда пользователь будет пытаться набрать что-то в поле ввода, снизу будет' +
//             ' появляться всплывающая подсказка, которая будет представлять собой список доступных вариантов выбора. ' +
//             'Пользователь сможет выбрать один из предложенных вариантов, не вводя его до конца.'
//     },
//     {
//         'header': 'Тег header задает верхнюю часть страницы в HTML. Используется в основной структуре страницы.'
//     },
//     {
//         'main': 'Тег main задает основную часть страницы в HTML. Используется в основной структуре страницы.'
//     },
//     {
//         'aside': 'Тег aside задает боковую часть страницы в HTML. Используется в основной структуре страницы.'
//     },
//     {
//         'footer': 'Тег footer задает нижнюю часть страницы в HTML. Используется в основной структуре страницы.'
//     },
//     {
//         'nav': 'Тег nav задаёт навигацию по сайту. Если на странице несколько блоков ссылок, ' +
//             'то в nav обычно помещают приоритетные ссылки. '
//     },
//     {
//         'section': 'Тег section задаёт раздел документа, может применяться для блока новостей, контактной информации, ' +
//             'глав текста, вкладок в диалоговом окне и др. Раздел обычно содержит заголовок. ' +
//             'Допускается вкладывать один элемент section внутрь другого.'
//     },
//     {
//         'article': 'Тег article представляет собой независимый фрагмент веб-страницы и, как правило, включает «шапку», ' +
//             'основное содержимое и «подвал», в которых располагаются такие части, как заголовок, текст, имя автора,' +
//             ' дата публикации, метки, рейтинг статьи и др. ' +
//             'article обычно применяется для статей сайта, сообщений блога и форума, комментариев.'
//     }
// ];

// let input = document.querySelector('#tag');
// let paragraph = document.querySelector('p');
//
// input.addEventListener('keypress', function (event) {
//     if (event.key === 'Enter') {
//         let flag = false;
//
//         for (let element of database) {
//             let entries = Object.entries(element);
//             entries.forEach(item => {
//                 if (item[0] === input.value) {
//                     paragraph.textContent = item[1];
//                     flag = true;
//                 }
//             });
//         }
//
//         (!flag) && (paragraph.textContent = 'Такого тега в базе нет');
//         return flag;
//     }
// });


// 2я реализация
// через ассоциативный массив (объект), с такой структурой данных работать удобнее + она более оптимизирована
let database =
    {
        'p': 'Тег p создает абзац. Абзацы, наряду с заголовками, составляются основную структуру текста в HTML странице.',
        'h1': 'Тег h1 создает заголовок 1-го уровня. Заголовок - это название какого-либо блока, ' +
            'обычно набранное большим и жирным шрифтом.',
        'h2': 'Тег h2 создает заголовок 2-го уровня. Заголовок - это название какого-либо блока, ' +
            'обычно набранное большим и жирным шрифтом.',
        'h3': 'Тег h3 создает заголовок 3-го уровня. Заголовок - это название какого-либо блока, ' +
            'обычно набранное большим и жирным шрифтом.',
        'h4': 'Тег h4 создает заголовок 4-го уровня. Заголовок - это название какого-либо блока, ' +
            'обычно набранное большим и жирным шрифтом.',
        'h5': 'Тег h5 создает заголовок 5-го уровня. Заголовок - это название какого-либо блока, ' +
            'обычно набранное большим и жирным шрифтом.',
        'h6': 'Тег h6 создает заголовок 6-го уровня. Заголовок - это название какого-либо блока, ' +
            'обычно набранное большим и жирным шрифтом.',
        'br': 'Тег br создает разрыв строки (это означает, что текст начнется с новой строки после этого тега). ' +
            'Не требует закрывающего тега.',
        'a': 'Тег a создает ссылку на другую страницу своего или чужого сайта. Адрес ссылки следует писать в атрибуте href.',
        'ul': 'Тег ul создает так называемый неупорядоченный список с маркерами в виде точек.',
        'ol': 'Тег ol создает так называемый упорядоченный список с маркерами в виде цифр.',
        'li': 'Тег li задает пункт упорядоченного списка ol или неупорядоченного списка ul. Вне списков тег не употребляется.',
        'img': 'Тег img создает картинку. Путь к картинке прописывается в атрибуте src. Не требует закрывающего тега.',
        'div': 'Тег div задает блок, который объединяет в себе другие теги.',
        'span': 'Тег span позволяет выделить кусочек текста.',
        'b': 'Тег b задает жирный текст на HTML.',
        'i': 'Тег i задает курсив с помощью HTML.',
        'strong': 'Тег strong задает важный текст, на котором хочет сделать акцент автор.',
        'em': 'Тег em задает важный текст, на котором хочет сделать акцент автор',
        's': 'Тег s задает перечеркнутый текст на HTML.',
        'hr': 'Тег hr задает разделительную горизонтальную линию. Преимущество тега в том, что для того, ' +
            'чтобы провести одиночную линию, не требуется создавать лишних блоков. Не требует закрывающего тега.',
        'form': 'Тег form создает форму для отправки данных на сервер, где эти данные будут обработаны с помощью языка' +
            ' PHP. Также данные формы могут быть обработаны с помощью языка JavaScript.',
        'input': 'Тег input создает различные элементы HTML формы: обычное поле ввода, поле для ввода пароля, ' +
            'флажок checkbox (чекбокс), радио кнопочки (radio), кнопку. Не требует закрывающего тега.',
        'button': 'Тег button создает кнопку для использования в HTML формах, а также просто как элемент дизайна ' +
            '(в этом случае ее часто вкладывают в ссылку).',
        'textarea': 'Тег textarea создает многострочное поле ввода для использования в HTML формах.\n' +
            'В отличие от тега input, в textarea можно вбивать много строк текста, разделяя их клавишей Enter.',
        'select': 'Тег select создает выпадающий список для использования в HTML формах.',
        'option': 'Тег option создает пункт выпадающего списка для тега select в HTML форме.',
        'optgroup': 'Тег optgroup группирует пункты option выпадающего списка select.\n' +
            'Группировка нужна для того, чтобы дать общий заголовок определенной группе пунктов списка. ' +
            'Этот заголовок задается в атрибуте label тега optgroup.',
        'label': 'Тег label задает метку для поля ввода типа input, textarea, select и так далее.\n' +
            'Метка привязывается к определенному полю ввода с помощью атрибута for.' +
            ' В нем следует указывать значение атрибута id поля ввода, к которому привязана метка.',
        'fieldset': 'Тег fieldset группирует поля HTML формы.\n' +
            'Результат при этом обводится рамкой, а подпись, которая создается с помощью тега legend,' +
            ' разрывает эту рамку, создавая неповторимый другими средствами эффект (см. пример).',
        'legend': 'Тег legend задает подпись над группировкой полей HTML формы, сделанной с помощью тега fieldset.',
        'datalist': 'Тег datalist создает автозаполнение для полей ввода input в HTML форме.\n' +
            'Суть автозаполнения: когда пользователь будет пытаться набрать что-то в поле ввода, снизу будет' +
            ' появляться всплывающая подсказка, которая будет представлять собой список доступных вариантов выбора. ' +
            'Пользователь сможет выбрать один из предложенных вариантов, не вводя его до конца.',
        'header': 'Тег header задает верхнюю часть страницы в HTML. Используется в основной структуре страницы.',
        'main': 'Тег main задает основную часть страницы в HTML. Используется в основной структуре страницы.',
        'aside': 'Тег aside задает боковую часть страницы в HTML. Используется в основной структуре страницы.',
        'footer': 'Тег footer задает нижнюю часть страницы в HTML. Используется в основной структуре страницы.',
        'nav': 'Тег nav задаёт навигацию по сайту. Если на странице несколько блоков ссылок, ' +
            'то в nav обычно помещают приоритетные ссылки. ',
        'section': 'Тег section задаёт раздел документа, может применяться для блока новостей, контактной информации, ' +
            'глав текста, вкладок в диалоговом окне и др. Раздел обычно содержит заголовок. ' +
            'Допускается вкладывать один элемент section внутрь другого.',
        'article': 'Тег article представляет собой независимый фрагмент веб-страницы и, как правило, включает «шапку», ' +
            'основное содержимое и «подвал», в которых располагаются такие части, как заголовок, текст, имя автора,' +
            ' дата публикации, метки, рейтинг статьи и др. ' +
            'article обычно применяется для статей сайта, сообщений блога и форума, комментариев.',
    };

let input = document.querySelector('#tag');
let paragraph = document.querySelector('p');

input.addEventListener('keypress', function (event) {
    if (event.key === 'Enter') {
        let flag = false;

        for (let key in database) {
            if (key === input.value) {
                paragraph.textContent = database[key];
                flag = true;
            }
        }

        (!flag) && (paragraph.textContent = 'Такого тега в базе нет');
        return flag;
    }
});
